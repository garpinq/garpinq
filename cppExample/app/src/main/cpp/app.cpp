/*
 * This C++ source file was generated by the Gradle 'init' task.
 */

#include <iostream>
#include <stdlib.h>

#include "InMemoryTaskPersistenceManager.h"
#include "Shot.h"
#include "ShotController.h"
#include "Task.h"
#include "TaskId.h"
#include "TaskController.h"
#include "TaskPersistenceManagerFactory.h"
#include "app.h"

std::string task_scheduler::Greeter::greeting() {
    return std::string("Hello, World!");
}

void log(const char* msg)
{
    std::cout << msg << std::endl;
}

void acceptTask(std::string taskName)
{
    TaskId id(taskName);
    Task newTask(id);
    newTask.setNumShots(12345);

    TaskController &taskController = TaskController::getInstance();

    taskController.acceptTask(newTask);

    log("Accepted task");
}

void getNextShot()
{
    ShotController &shotController = ShotController::getInstance();

    Shot* nextShot = shotController.getNextShot();

    log("Retrieved shot");

    delete nextShot;
}

int main () {
    InMemoryTaskPersistenceManager persistenceMgr;
    TaskPersistenceManagerFactory::setTaskPersistenceManager(&persistenceMgr);
    log("Setup complete");

    acceptTask("task-for-demonstration");

    getNextShot();

    return 0;
}
